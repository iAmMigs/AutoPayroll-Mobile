<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme for Night Mode. -->
    <style name="Theme.AutoPayrollMobile" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- Primary brand color (retaining from your palette) -->
        <item name="colorPrimary">@color/yellow_buttons</item>
        <item name="colorPrimaryVariant">@color/deep_indigo_bottom_nav</item> <!-- Status bar will blend with dark background -->
        <item name="colorOnPrimary">@color/text_primary</item> <!-- Dark text on yellow buttons. This is consistent. -->

        <!-- Secondary brand color (retaining from your palette) -->
        <item name="colorSecondary">@color/active</item>
        <item name="colorSecondaryVariant">@color/active</item>
        <item name="colorOnSecondary">@color/text_primary</item> <!-- Dark text on active green. Consistent. -->
        <!-- If contrast is an issue, consider @color/deep_indigo_bottom_nav if active is light enough -->

        <!-- Background and surface colors for Dark Theme -->
        <item name="android:colorBackground">@color/deep_indigo_bottom_nav</item> <!-- #0B132B -->
        <item name="colorSurface">@color/deep_indigo_bottom_nav</item>           <!-- #0B132B (Cards will be same as background, relying on elevation/borders) -->
        <!-- If you need distinction for cards, you might use a slightly lighter version of deep_indigo -->
        <!-- or use Material's elevation overlays -->

        <!-- Text/icon colors on top of background/surface for Dark Theme -->
        <!-- Using your lightest colors for text on the dark background -->
        <item name="colorOnBackground">@color/background</item>     <!-- #FDFCF9 on #0B132B -->
        <item name="colorOnSurface">@color/background</item>        <!-- #FDFCF9 on #0B132B -->

        <!-- Error color -->
        <item name="colorError">@color/red</item>
        <item name="colorOnError">@color/background</item>         <!-- #FDFCF9 on red -->

        <!-- Status bar color for Dark Theme. -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item> <!-- Will be deep_indigo_bottom_nav -->
        <item name="android:windowLightStatusBar" tools:targetApi="m">false</item> <!-- Ensures status bar icons are light -->

        <!-- Text Colors for Dark Theme -->
        <item name="android:textColorPrimary">@color/background</item>       <!-- #FDFCF9 -->
        <item name="android:textColorSecondary">@color/card_inner_surface</item> <!-- #D7D5CE (as a lighter secondary text) -->
        <item name="android:textColorHint">@color/muted_color_text</item>   <!-- #9CA3AF (as a hint color, test contrast) -->

        <!-- Default button style for dark theme -->
        <item name="materialButtonStyle">@style/Widget.App.Button.Night</item>
    </style>

    <!-- Specific style for buttons in dark mode -->
    <style name="Widget.App.Button.Night" parent="Widget.App.Button">
        <item name="backgroundTint">@color/yellow_buttons</item> <!-- Consistent button color -->
        <item name="android:textColor">@color/text_primary</item>   <!-- Consistent text on button -->
        <item name="rippleColor">@color/text_secondary</item> <!-- Darker ripple on yellow for dark theme -->
    </style>

    <!-- OtpBoxStyle will inherit. If its default background (@drawable/otp_box_background)
         doesn't look good on @color/deep_indigo_bottom_nav, you'll need a
         res/drawable-night/otp_box_background.xml or adjust its styling here.
         The textColor is already ?attr/colorOnSurface so it will adapt to @color/background.
    -->
</resources>